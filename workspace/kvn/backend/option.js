"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var Options=function(){function Options(text,id,callback,password){_classCallCheck(this,Options);if(password!=="sophiebestgrill"){if(!window.contains.call(window.optionIDArray,id)){window.optionIDArray.push(id);window.optionList[id]=callback}else{displayError("Illegal Argument Exception: ID for option <i>"+text+"</i> and id </i>"+id+"</i> has already been used.")}this.text=text;this.id=id;this.callback=callback}}_createClass(Options,[{key:"getText",value:function getText(){return this.text}},{key:"getID",value:function getID(){return this.id}},{key:"executeCallback",value:function executeCallback(){if(typeof this.callback==="function"){return this.callback()}else{return false}}}]);return Options}();