"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var Scene=function(){function Scene(id,frameArray,onEndCallback){_classCallCheck(this,Scene);//console.log("consturctor called for id: "+id);
if(!window.contains.call(window.sceneIDArray,id)){window.sceneIDArray.push(id);window.scenes[id]=this;// console.log(window.scenes[id].id);
}else{displayError("Illegal Argument Exception: ID for scene id </i>"+id+"</i> has already been used.")}this.id=id;this.endCB=onEndCallback;this.fArray=frameArray;this.current=-1}//getters
_createClass(Scene,[{key:"getID",value:function getID(){return this.id}},{key:"getCurrent",value:function getCurrent(){return this.current}},{key:"getCurrentFrame",value:function getCurrentFrame(){return this.fArray[this.current]}},{key:"play",value:function play(){this.current=0;this.fArray[0].start()}},{key:"playFromFrame",value:function playFromFrame(frame){if(frame>this.fArray.length){displayError("Index out of Bound: ID for frame </i>"+id+"</i> doesn't exist in scene <i>"+this.id+"</i>")}for(var i=0;i<=frame-1;i++){this.current=i;this.fArray[i].start(true);this.fArray[i].proceed(true);if(isOption){var op=this.fArray[i].callBackOption();if(op!==null){if(op.executeCallback()===true){return}}$("#optionholder").css("display","none");$(".option").remove();isOption=false}}this.current=frame;this.fArray[frame].start()}},{key:"hasCurrentFrameEnded",value:function hasCurrentFrameEnded(){if(this.current>this.fArray.length){displayError("Index out of Bound: ID for frame </i>"+id+"</i> doesn't exist in scene <i>"+this.id+"</i>")}if(this.current===-1){return true}else{return this.fArray[this.current].checkIfEnded()}}},{key:"prevFrame",value:function prevFrame(){playScene(this.id,this.current-1)}},{key:"restart",value:function restart(){playScene(this.id,0)}},{key:"restartFrame",value:function restartFrame(){playScene(this.id,this.current)}},{key:"forceNextFrame",value:function forceNextFrame(){if(this.current===this.fArray.length-1){if(this.onEnd()){onClick=false}}else{this.fArray[this.current].proceed(true);if(isOption){var op=this.fArray[this.current].callBackOption();if(op!==null){if(op.executeCallback()===true){return}}$("#optionholder").css("display","none");$(".option").remove();isOption=false}this.current++;this.fArray[this.current].start()}}},{key:"onClick",value:function(_onClick){function onClick(){return _onClick.apply(this,arguments)}onClick.toString=function(){return _onClick.toString()};return onClick}(function(){if(this.current!==-1){if(this.fArray[this.current].checkIfEnded()){if(this.current===this.fArray.length-1){if(this.onEnd()){onClick=false}}else{this.current++;if(this.fArray[this.current].start()){onClick=false}}}else{if(this.fArray[this.current].onClick()){onClick=false}else{onClick=false}}}})},{key:"onEnd",value:function onEnd(){if(this.endCB!==null&&typeof this.endCB==="function"){this.endCB();return true}else{return true}}}]);return Scene}();